import sys

def rotate(side, clockWise):
    if clockWise == '+':
        temp = [side[0][0], side[0][1], side[0][2]]
        side[0][0], side[0][1], side[0][2] = side[2][0], side[1][0], side[0][0]
        side[0][0], side[1][0], side[2][0] = side[2][0], side[2][1], side[2][2]
        side[2][0], side[2][1], side[2][2] = side[2][2], side[1][2], side[0][2]
        side[2][2], side[1][2], side[0][2] = temp[2], temp[1], temp[0]
    else:
        temp = [side[0][0], side[0][1], side[0][2]]
        side[0][0], side[0][1], side[0][2] = side[0][2], side[1][2], side[2][2]
        side[0][2], side[1][2], side[2][2] = side[2][2], side[2][1], side[2][0]
        side[2][2], side[2][1], side[2][0] = side[2][0], side[1][0], side[0][0]
        side[2][0], side[1][0], side[0][0] = temp[0], temp[1], temp[2]
    return side

def sol(d, clockWise):
    global U, F, R, L, D, B
    if d == 'U':
        if clockWise == '+':
            U = rotate(U, '+')
            temp = [F[0][0], F[0][1], F[0][2]]
            F[0][0], F[0][1], F[0][2] = R[0][0], R[0][1], R[0][2]
            R[0][0], R[0][1], R[0][2] = B[0][0], B[0][1], B[0][2]
            B[0][0], B[0][1], B[0][2] = L[0][0], L[0][1], L[0][2]
            L[0][0], L[0][1], L[0][2] = temp[0], temp[1], temp[2]
        else:
            U = rotate(U, '-')
            temp = [F[0][0], F[0][1], F[0][2]]
            F[0][0], F[0][1], F[0][2] = L[0][0], L[0][1], L[0][2]
            L[0][0], L[0][1], L[0][2] = B[0][0], B[0][1], B[0][2]
            B[0][0], B[0][1], B[0][2] = R[0][0], R[0][1], R[0][2]
            R[0][0], R[0][1], R[0][2] = temp[0], temp[1], temp[2]
    elif d == 'F':
        if clockWise == '+':
            F = rotate(F, '+')
            temp = [U[2][0], U[2][1], U[2][2]]
            U[2][0], U[2][1], U[2][2] = L[2][2], L[1][2], L[0][2]
            L[2][2], L[1][2], L[0][2] = D[0][2], D[0][1], D[0][0]
            D[0][2], D[0][1], D[0][0] = R[0][0], R[1][0], R[2][0]
            R[0][0], R[1][0], R[2][0] = temp[0], temp[1], temp[2]
        else:
            F = rotate(F, '-')
            temp = [U[2][0], U[2][1], U[2][2]]
            U[2][0], U[2][1], U[2][2] = R[0][0], R[1][0], R[2][0]
            R[0][0], R[1][0], R[2][0] = D[0][2], D[0][1], D[0][0]
            D[0][2], D[0][1], D[0][0] = L[2][2], L[1][2], L[0][2]
            L[2][2], L[1][2], L[0][2] = temp[0], temp[1], temp[2]
    elif d == 'R':
        if clockWise == '+':
            R = rotate(R, '+')
            temp = [U[0][2], U[1][2], U[2][2]]
            U[0][2], U[1][2], U[2][2] = F[0][2], F[1][2], F[2][2]
            F[0][2], F[1][2], F[2][2] = D[0][2], D[1][2], D[2][2]
            D[0][2], D[1][2], D[2][2] = B[2][0], B[1][0], B[0][0]
            B[2][0], B[1][0], B[0][0] = temp[0], temp[1], temp[2]
        else:
            R = rotate(R, '-')
            temp = [U[0][2], U[1][2], U[2][2]]
            U[0][2], U[1][2], U[2][2] = B[2][0], B[1][0], B[0][0]
            B[2][0], B[1][0], B[0][0] = D[0][2], D[1][2], D[2][2]
            D[0][2], D[1][2], D[2][2] = F[0][2], F[1][2], F[2][2]
            F[0][2], F[1][2], F[2][2] = temp[0], temp[1], temp[2]
    elif d == 'L':
        if clockWise == '+':
            L = rotate(L, '+')
            temp = [U[0][0], U[1][0], U[2][0]]
            U[0][0], U[1][0], U[2][0] = B[2][2], B[1][2], B[0][2]
            B[2][2], B[1][2], B[0][2] = D[0][0], D[1][0], D[2][0]
            D[0][0], D[1][0], D[2][0] = F[0][0], F[1][0], F[2][0]
            F[0][0], F[1][0], F[2][0] = temp[0], temp[1], temp[2]
        else:
            L = rotate(L, '-')
            temp = [U[0][0], U[1][0], U[2][0]]
            U[0][0], U[1][0], U[2][0] = F[0][0], F[1][0], F[2][0]
            F[0][0], F[1][0], F[2][0] = D[0][0], D[1][0], D[2][0]
            D[0][0], D[1][0], D[2][0] = B[2][2], B[1][2], B[0][2]
            B[2][2], B[1][2], B[0][2] = temp[0], temp[1], temp[2]

    elif d == 'B':
        if clockWise == '+':
            B = rotate(B, '+')
            temp = [U[0][0], U[0][1], U[0][2]]
            U[0][0], U[0][1], U[0][2] = R[0][2], R[1][2], R[2][2]
            R[0][2], R[1][2], R[2][2] = D[2][2], D[2][1], D[2][0]
            D[2][2], D[2][1], D[2][0] = L[2][0], L[1][0], L[0][0]
            L[2][0], L[1][0], L[0][0] = temp[0], temp[1], temp[2]
        else:
            B = rotate(B, '-')
            temp = [U[0][0], U[0][1], U[0][2]]
            U[0][0], U[0][1], U[0][2] = L[2][0], L[1][0], L[0][0]
            L[2][0], L[1][0], L[0][0] = D[2][2], D[2][1], D[2][0]
            D[2][2], D[2][1], D[2][0] = R[0][2], R[1][2], R[2][2]
            R[0][2], R[1][2], R[2][2] = temp[0], temp[1], temp[2]

    elif d == 'D':
        if clockWise == '+':
            D = rotate(D, '+')
            temp = [F[2][0], F[2][1], F[2][2]]
            F[2][0], F[2][1], F[2][2] = L[2][0], L[2][1], L[2][2]
            L[2][0], L[2][1], L[2][2] = B[2][0], B[2][1], B[2][2]
            B[2][0], B[2][1], B[2][2] = R[2][0], R[2][1], R[2][2]
            R[2][0], R[2][1], R[2][2] = temp[0], temp[1], temp[2]
        else:
            D = rotate(D, '-')
            temp = [F[2][0], F[2][1], F[2][2]]
            F[2][0], F[2][1], F[2][2] = R[2][0], R[2][1], R[2][2]
            R[2][0], R[2][1], R[2][2] = B[2][0], B[2][1], B[2][2]
            B[2][0], B[2][1], B[2][2] = L[2][0], L[2][1], L[2][2]
            L[2][0], L[2][1], L[2][2] = temp[0], temp[1], temp[2]

T = int(sys.stdin.readline().rstrip())
for i in range(T):
    U = [["w","w","w"], ["w","w","w"], ["w","w","w"]]
    F = [["r","r","r"], ["r","r","r"], ["r","r","r"]]
    R = [["b","b","b"], ["b","b","b"], ["b","b","b"]]
    L = [["g","g","g"], ["g","g","g"], ["g","g","g"]]
    B = [["o","o","o"], ["o","o","o"], ["o","o","o"]]
    D = [["y","y","y"], ["y","y","y"], ["y","y","y"]]

    n = int(input())
    data = list(input().split())
    for j in data:
        d, clockWise = j[0], j[1]
        sol(d, clockWise)
    for j in range(3):
        print(''.join(U[j]))
